#!/bin/bash
# Enough is enough. Use "case" here!
if [[ "$1" == "" || "$1" == "help" || "$1" == "-h" ]]; then
    echo "Usage:"
    echo ""
    echo "${0##*/} start:···························Start the image and server."
    echo "${0##*/} stop:                            Stop the image and server."
    echo "${0##*/} restart:·························Perform a stop and a start."
    echo "${0##*/} enter:                           Start an interactive shell in the server."
    echo "${0##*/} import <file> [target]:··········Copy file inside the server container."
    echo "${0##*/} export <file> [target]:          Copy file from the server container."
    echo "${0##*/} dump <file> [target]:············Export odoo database dump file."
    echo "${0##*/} undump <file> [target]:          Import odoo database dump file."
    echo "${0##*/} regenerate:······················CAREFUL. Erases current docker images and start again"
    echo "${0##*/} destroy:                         CAREFUL. Erases current docker image"
    echo "${0##*/} logs:····························Output docker containter logs to stdin"
    exit 0;
elif [[ "$1" == "start" ]]; then
    docker start odoo-pro-db &&
    docker start odoo-pro;
elif [[ "$1" == "restart" ]]; then
    docker stop odoo-pro-db && docker stop odoo-pro;
    docker start odoo-pro-db && docker start odoo-pro;
elif [[ "$1" == "stop" ]]; then
    docker stop odoo-pro &&
    docker stop odoo-pro-db;
elif [[ "$1" == "import" ]]; then
    if [[ ! "$2" == "" ]]; then
        docker cp "$2" odoo-pro:"${3-/root/.}"
    fi
elif [[ "$1" == "export" ]]; then
    if [[ ! "$2" == "" ]]; then
        docker cp odoo-pro:"$2" "${3-.}"
    fi
elif [[ "$1" == "undump" ]]; then
    if [[ ! "$2" == "" ]]; then
        if [[ ! "$3" == "" ]]; then
            docker cp "$3" odoo-pro-db:"/home/postgres/${3}"
            docker exec -u postgres -dit odoo-pro-db bash -c 'pg_dump '"${3%%\.dump}"' < /home/postgres/'"${3}"
        fi
    fi
elif [[ "$1" == "dump" ]]; then
    if [[ ! "$2" == "" ]]; then
        docker exec -u postgres -dit odoo-pro-db bash -c 'pg_dump '"${2}"' > /home/postgres/'"${2}"'.dump'
        docker cp odoo-pro-db:"/home/postgres/${2}.dump" "${2}.dump"
    fi
elif [[ "$1" == "regenerate" ]]; then
    docker stop odoo-pro &&
    docker stop odoo-pro-db &&
    docker rm odoo-pro-db &&
    docker rm odoo-pro;
    docker run --name odoo-pro-db -d -e POSTGRES_USER=odoo -e POSTGRES_PASSWORD=odoo postgres:9.4 &&
    docker exec -dit odoo-pro-db bash -c 'mkdir /home/postgres && chown postgres:postgres /home/postgres' &&
    docker run --name odoo-pro -t -p 8080:8069 --link odoo-pro-db:db -e USERID=$UID --volume=${HOME}/workbench/odoo-production:/mnt/extra-addons -d odoo
elif [[ "$1" == "destroy" ]]; then
    docker stop odoo-pro &&
    docker stop odoo-pro-db &&
    docker rm odoo-pro-db &&
    docker rm odoo-pro;
elif [[ "$1" == "enter" ]]; then
    docker exec -u root -it odoo-pro sh -c "cd /usr/lib/python3/dist-packages/odoo && bash"
elif [[ "$1" == "logs" ]]; then
    watch -c 'docker logs odoo-pro | tail'
else
    echo "Unknown argument: $1"
    exit 1;
fi
