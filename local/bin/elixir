#!/bin/bash
# Enough is enough. Use "case" here!
if [[  "$1" == "" || "$1" == "help" || "$1" == "-h" ]]; then
    echo "Usage:"
    echo ""
    echo "    ${0##*/} start:···························Start the image and server."
    echo "    ${0##*/} stop:                            Stop the image and server."
    echo "    ${0##*/} restart:·························Perform a stop and a start."
    echo "    ${0##*/} enter:                           Start an interactive shell in the server."
    echo "    ${0##*/} build:...........................Build page."
    echo "    ${0##*/} import <file> [target]:          Copy file inside the server container."
    echo "    ${0##*/} export <file> [target]:..........Copy file from the server container."
    echo "    ${0##*/} regenerate:                      CAREFUL. Erases current docker images and start again"
    echo "    ${0##*/} destroy:.........................CAREFUL. Erases current docker image"
    echo "    ${0##*/} git|erl|iex|elixirc|erlc|mix:    Bridge to docker insides, will act in main folder"
    echo "    ${0##*/} fix_permissions:.................changes all permissions for files in main folder"
    echo ""
    echo "Anything else will be passed to the internal “Elixir” binary, acting in the main folder."
    echo ""
    docker exec -it elixir bash -c "cd /root/elixir && /usr/bin/env elixir"
    exit 0;
elif [[ "$1" == "start" ]]; then
    docker start elixir
elif [[ "$1" == "restart" ]]; then
    docker stop elixir && docker start elixir
elif [[ "$1" == "stop" ]]; then
    docker stop elixir
elif [[ "$1" == "import" ]]; then
    if [[ ! "$2" == "" ]]; then
        docker cp "$2" elixir:"${3-/root/.}"
    fi
elif [[ "$1" == "export" ]]; then
    if [[ ! "$2" == "" ]]; then
        docker cp elixir:"$2" "${3-.}"
    fi
elif [[ "$1" == "build" ]]; then
    docker exec -it elixir bash -c 'cd /root/elixir/ && ./build.sh'
elif [[ "$1" == "regenerate" ]]; then
    docker stop elixir &&
    docker rm elixir;
    docker run --name elixir --label=elixir --volume=${HOME}/workbench/elixir:/root/elixir -it -p 127.0.0.1:3333:3333 -d elixir &&
    docker exec -it elixir bash -c 'apt-get update && apt-get install -y inotify-tools'
    docker exec -it elixir bash -c 'yes | mix local.hex' &&
    docker exec -it elixir bash -c 'yes | mix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new.ez'
    #docker exec -it elixir bash -c 'apt-get update && apt-get install -y git'
elif [[ "$1" == "destroy" ]]; then
    docker stop elixir
    docker rm elixir
elif [[ "$1" == "enter" ]]; then
    docker exec -it elixir sh -c "cd /root/elixir && bash"
elif [[ "$1" == "git" || "$1" == "erl" || "$1" == "iex" || "$1" == "elixirc" || "$1" == "erlc" || "$1" == "mix" ]]; then
    docker exec -it elixir bash -c "cd /root/elixir && $*"
elif [[ "$1" == "fix_permissions" ]]; then
    docker exec -it elixir sh -c "cd /root/elixir && chown -R $(id -u):$(id -g) ."
else
    echo "Passing through a docker container..."
    docker exec -it elixir bash -c "cd /root/elixir && /usr/bin/env elixir $*"
fi
