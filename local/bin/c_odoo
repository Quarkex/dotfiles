#!/usr/bin/env bash 

SCRIPT=`basename ${BASH_SOURCE[0]}`
COMPOSE_ODOO_FOLDER="/home/docker_admin/compose/odoo"

_rll="\r\033[K" # Reset last line

instance="$1"
shift

#Help function
function _HELP {
    if [[ $instance == "" ]]; then
        instance="<instance>"
    fi
    echo -e "Usage:"
    echo -e ""
    echo -e "$( echo "
            --start:¡Start the image and server
            --stop:¡Stop the image and server
            --restart:¡Perform a stop and a start
            --enter:¡Start an interactive shell in the server
            --import <file> [target]:¡Copy file inside the server container
            --export <file> [target]:¡Copy file from the server container
            --save_files [folder]:¡Export all files inside odoo instance to a backup
            --regenerate <db instance> [port]:¡CAREFUL. Erases current docker images and start again
            --destroy:¡CAREFUL. Erases current docker image
            --logs:¡Output docker containter logs to stdin
            --fix_permission:¡Fix permissions to functional values
            --update_modules:¡Update all modules managed by git projects
            --install_module <module>:¡Install a module from a folder and uploads it to git
            --port:¡Show assigned port of instance
            --databases:¡Show databases managed by this odoo
            --odoo:¡Bridge to odoo binary, will act in main folder
    ")" | grep - "--" | sed -e "s/^[\ ]*/${SCRIPT}¡${instance}¡/g" | column -s¡ -t
    exit 1;
}

if [[ $instance == "" || $instance == "-h" || $instance == "--help" ]]; then
    _HELP;
    exit 1;
fi

methods=""
OPTSPEC=":h-:"
while getopts "$OPTSPEC" optchar; do
    case "${optchar}" in
        -)
            case "${OPTARG}" in
                start)          methods="$methods _${OPTARG^^}" ;;
                stop)           methods="$methods _${OPTARG^^}" ;;
                restart)        methods="$methods _${OPTARG^^}" ;;
                enter)          methods="$methods _${OPTARG^^}" ;;
                import)         methods="$methods _${OPTARG^^}" ;;
                export)         methods="$methods _${OPTARG^^}" ;;
                save_files)     methods="$methods _${OPTARG^^}" ;;
                regenerate)     methods="$methods _${OPTARG^^}" ;;
                destroy)        methods="$methods _${OPTARG^^}" ;;
                logs)           methods="$methods _${OPTARG^^}" ;;
                fix_permission) methods="$methods _${OPTARG^^}" ;;
                update_modules) methods="$methods _${OPTARG^^}" ;;
                install_module) methods="$methods _${OPTARG^^}" ;;
                port)           methods="$methods _${OPTARG^^}" ;;
                databases)      methods="$methods _${OPTARG^^}" ;;
                odoo)           methods="$methods _${OPTARG^^}" ;;
                help)
                    _HELP
                    ;;
                *)
                    if [ "$OPTERR" = 1 ] && [ "${OPTSPEC:0:1}" != ":" ]; then
                        echo "Unknown option --${OPTARG}" >&2
                    fi
                    ;;
            esac;;
        h)
            _HELP
            exit 2
            ;;
        *)
            if [ "$OPTERR" != 1 ] || [ "${OPTSPEC:0:1}" = ":" ]; then
                echo "Non-option argument: '-${OPTARG}'" >&2
            fi
            ;;
    esac
done
shift "$(($OPTIND -1))"

function _START {
    pushd . &>/dev/null
    cd "$COMPOSE_ODOO_FOLDER/$instance"
    docker-compose up -d;
    popd &>/dev/null
}
function _STOP {
    pushd . &>/dev/null
    cd "$COMPOSE_ODOO_FOLDER/$instance"
    docker-compose down $@;
    popd &>/dev/null
}

function _RESTART {
    _STOP
    _START
}
function _ENTER {
    pushd . &>/dev/null
    cd "$COMPOSE_ODOO_FOLDER/$instance"
    docker-compose exec odoo11 bash;
    popd &>/dev/null
}
function _IMPORT {
    if [[ ! "$argumentA" == "" ]]; then
        if [[ "$argumentB" == "" ]]; then
            argumentB="/root/."
        fi
        docker cp "$argumentA" odoo-$instance:"$argumentB"
    fi
}
function _EXPORT {
    if [[ ! "$argumentA" == "" ]]; then
        docker cp odoo-$instance:"$argumentA" "${argumentB-.}"
    fi
}
function _SAVE_FILES {
    timestamp="$(date +%Y-%m-%d_%H-%M-%S)"
    filename="${instance}"'_'"${timestamp}"'.tar.gz'
    if [[ $argumentA == "" ]]; then
        output_name="./$filename"
    else
        output_name="$argumentA/$filename"
    fi
    tar -zcpvf "$output_name" --transform "s,^${COMPOSE_ODOO_FOLDER#/},," "$COMPOSE_ODOO_FOLDER/$instance/data"
}
function _REGENERATE {
    _DESTROY
    _START
}
function _DESTROY {
    _STOP
    if [[ ! $instance == "" ]]; then
        rm -rf "$COMPOSE_ODOO_FOLDER/$instance/data"
    fi
}
function _LOGS {
    pushd . &>/dev/null
    cd "$COMPOSE_ODOO_FOLDER/$instance"
    docker-compose logs $@;
    popd &>/dev/null
}
function _FIX_PERMISSION {
    pushd . &>/dev/null
    cd "$COMPOSE_ODOO_FOLDER/$instance"
    docker-compose exec odoo11 bash -c "chown -R odoo:odoo /var/lib/odoo";
    docker-compose exec odoo11 bash -c "chown -R $UID:$(id -g) /mnt/extra-addons";
    popd &>/dev/null
}
function _UPDATE_MODULES {
    pushd . &>/dev/null
    cd "$COMPOSE_ODOO_FOLDER/$instance"
    git pull --recurse-submodules
    git submodule update --recursive --remote
    popd &>/dev/null
}
function _INSTALL_MODULE {
    if [[ ! "$argumentA" == "" ]]; then
        module="${argumentA%/}";
        module="${module##*/}";
        instance_project="git@git.cip.es:/home/git/projects/odoo-instance-$instance";
        module_project="git@git.cip.es:/home/git/projects/odoo-module-$module";

        # If remote module repo exists
        git ls-remote -h $module_project.git &>/dev/null
        if [[ $? == 0 ]]; then
            pushd . &>/dev/null
            cd "$COMPOSE_ODOO_FOLDER/$instance/data/addons/"
            git submodule add "$module_project" "$module"
            popd &>/dev/null;
        else
            if [[ -d "$argumentA" ]]; then
                cp -r "$argumentA" "$COMPOSE_ODOO_FOLDER/$instance/data/addons/$module"
                echo "done"
            else
                "Module “$module” not found."
            fi
        fi
    fi

}
function _PORT {
    pushd . &>/dev/null
    cd "$COMPOSE_ODOO_FOLDER/$instance"
    docker-compose config | grep INSTANCE_PORT | head -n 1 | sed -e "s/^.*: '//" -e "s/'.*$//"
    popd &>/dev/null
}
function _DATABASES {
    docker exec -u root -it odoo-$instance bash -c "ls -d /var/lib/odoo/filestore/*/ | sed -e 's_/\$__g' -e 's_^.*/__' | paste -sd ' '";
}
function _ODOO {
    argument="$( echo "$*" | sed -E -e 's/^'"$instance"' //' )"
    docker exec -u root -it odoo-$instance bash -c "cd /mnt/extra-addons && /usr/bin/$argument"
}

argumentA="$1";
argumentB="$2";
if [[ "$methods" == "" ]]; then
    _HELP
else
    for method in $methods; do 
        $method $@;
    done
fi
exit 0
